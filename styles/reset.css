/* CSS Reset */
html, body, div, span, h1, h2, h3, h4, h5, a, ol, ul, li, form, label, article, aside, figure, figcaption, footer, header, nav, p {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  text-align: left;
}

body {
  line-height: 1.5;
}

ol, ul {
  list-style: none;
}

img {
  width: 100%
}

 h2 {
    font-size: x-large;
    font-weight: 800;
}

 p {
    font-weight: 500;
    margin: 5px;
}

.hidden {
  display: none;
}

	code {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 0.25em;
    border: solid 1px rgba(255, 255, 255, 0.15);
    font-family: "Courier New", monospace;
    font-size: 0.9em;
    margin: 0 0.25em;
    padding: 0.25em 0.65em;
    padding-top: 50%;
    margin: 0;
    overflow: auto;
	}

	pre {
		-webkit-overflow-scrolling: touch;
		font-family: "Courier New", monospace;
		font-size: 0.9em;
		margin: 0 0 2em 0;
	}

		pre code {
			display: block;
			line-height: 1.75em;
			padding: 1em 1.5em;
      overflow-x: auto;
      margin-top: 50%;
    }
    
/* fil card */

/* apply perspective to the 3D space */
.flipcard {
    margin: auto;
    box-sizing: border-box;
    box-shadow: 0 1px 2px rgba(156, 156, 156, 0.15);
    transition: all 0.3s ease-in-out;
    width: 280px;
    height: 380px;
    perspective: 600px;
}

/* set the card transform origin to be at the center of the card */
.card {
    width: 100%;
    height: 100%;
    position: relative;
    transition: transform 1s;
    transform-style: preserve-3d;
}
/* reset position to absolute in order to postion cards in 3d space */
/* hide the backside of the cards when flipped */
.card-face {
    position: absolute;
    height: 100%;
    width: 100%;
    backface-visibility: hidden;
}

.frontface, .frontface2 {
    border-radius: 4px;
    background: white;
}

.frontface h2 {
    margin-top: 50%;
    text-align: center;
    color: black;
}
/* rotate backface with 3d transform */
.backface {
    color: #4285F4;
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.705);
    transform: rotateX(-180deg);
    display: flex;
    font-size: smaller;

}
/* rotate when is-flipped class present */
.card.is-flipped {
    transform: rotateX(-180deg);
}